//
//  CommonMapPresenter.swift
//  KyotoTrip
//
//  Created by TANAKA MASAYUKI on 2020/05/23.
//  Copyright Â© 2020 TANAKA MASAYUKI. All rights reserved.
//
import RxSwift
import RxCocoa
import CoreLocation
import Mapbox

protocol SharedMapPresenterProtocol {
    /// Visible layer status entity
    var markerCategoryRelay: BehaviorRelay<MarkerCategoryEntity> { get }
    /// Restaurants data from GNavi API
    var restaurantMarkersRelay: BehaviorRelay<[RestaurantMarkerEntity]> { get }
    /// Selected cell at category view
    var selectedCategoryViewCellRelay: BehaviorRelay<MarkerEntityProtocol> { get }
    /// Makers generated by using style layers through Mapbox Studio
    var markersFromStyleLayersRelay: BehaviorRelay<[MarkerEntityProtocol]> { get }

    var mapViewCenterCoordinate: CLLocationCoordinate2D { get }

    func updateMapViewViewpoint(centerCoordinate: CLLocationCoordinate2D)
}

class SharedMapPresenter: SharedMapPresenterProtocol {
    
    static let shared = SharedMapPresenter()
    
    let markerCategoryRelay = BehaviorRelay<MarkerCategoryEntity>(value: MarkerCategoryEntity())
    let restaurantMarkersRelay = BehaviorRelay<[RestaurantMarkerEntity]>(value: [])
    let selectedCategoryViewCellRelay = BehaviorRelay<MarkerEntityProtocol>(value: BusstopMarkerEntity())
    let markersFromStyleLayersRelay = BehaviorRelay<[MarkerEntityProtocol]>(value: [])
    
    var mapViewCenterCoordinate: CLLocationCoordinate2D
        = CLLocationCoordinate2D(latitude: MapView.kyotoStationLat, longitude: MapView.kyotoStationLong)
    
    init() {
    }
    
    func updateMapViewViewpoint(centerCoordinate: CLLocationCoordinate2D) {
        self.mapViewCenterCoordinate = centerCoordinate
    }
}
